{"version":3,"sources":["base/_reset.scss","base/_typography.scss","main.css","components/_loader.scss","abstracts/_mixins.scss","main.scss"],"names":[],"mappings":"AAAA;;;;;;;EAOE,SAAS;EACT,UAAU;EACV,qBAAqB;EACrB,YAAY;EACZ,qBAAqB;EACrB,aAAa,EAAA;;AAEf;EACE,sBAAsB,EAAA;;AAExB;EACE,qBAAqB;EACrB,cAAc,EAAA;;AAGhB;EACE,qBAAqB,EAAA;;AAGvB,gCAAA;AACA;;EAEE,wBAAwB;EACxB,SAAS,EAAA;;AAGX,YAAA;AACA;EACE,0BAA0B,EAAA;;ACnC5B;;;;;;;;;;CC4CC;AC5CD;ECyGE,uCAA+B;EAA/B,+BAA+B;EDvG/B,UAAU;EACV,cAAc;EACd,eAAe;EACf,MAAM;EACN,SAAS;EACT,OAAO;EACP,QAAQ;EC2DR,oBAAa;EAAb,qBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,8BAMiC;EANjC,6BAMiC;EANjC,2BAMiC;MANjC,uBAMiC;UANjC,mBAMiC;EALjC,wBAMiC;EANjC,+BAMiC;MANjC,qBAMiC;UANjC,uBAMiC;EALjC,yBAKyC;EALzC,2BAKyC;MALzC,sBAKyC;UALzC,mBAKyC;EAJzC,uBAGmD;MAHnD,mBAGmD;UAHnD,eAGmD;EDhEnD,6FAAqF;EAArF,qFAAqF,EAAA;EAVvF;IAaI,UAAU;IACV,cAAc,EAAA;;AEHlB;;EAEE,kBAAkB;EAClB,kBAAkB,EAAA;;AAGpB;EAEE,iBAAiB,EAAA","file":"main.css","sourcesContent":["body,\r\np,\r\nul, li,\r\nh1, h2, h3, h4, h5, h6,\r\ninput,\r\ntextarea,\r\na {\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style-type: none;\r\n  border: none;\r\n  text-decoration: none;\r\n  outline: none;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\na {\r\n  text-decoration: none;\r\n  color: inherit;\r\n}\r\n\r\nli {\r\n  list-style-type: none;\r\n}\r\n\r\n/* Chrome, Safari, Edge, Opera */\r\ninput::-webkit-outer-spin-button,\r\ninput::-webkit-inner-spin-button {\r\n  -webkit-appearance: none;\r\n  margin: 0;\r\n}\r\n\r\n/* Firefox */\r\ninput[type=\"number\"] {\r\n  -moz-appearance: textfield;\r\n}\r\n","/*\r\n@font-face {\r\n  font-family: 'OfficinaSans';\r\n  src: url('../fonts/OfficinaSansBookC.eot');\r\n  src: url('../fonts/OfficinaSansBookC.eot?#iefix') format('embedded-opentype'),\r\n  url('../fonts/OfficinaSansBookC.woff2') format('woff2'),\r\n  url('../fonts/OfficinaSansBookC.woff') format('woff');\r\n  font-weight: normal;\r\n  font-style: normal;\r\n}\r\n*/\r\n","body,\np,\nul, li,\nh1, h2, h3, h4, h5, h6,\ninput,\ntextarea,\na {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n  border: none;\n  text-decoration: none;\n  outline: none; }\n\n* {\n  box-sizing: border-box; }\n\na {\n  text-decoration: none;\n  color: inherit; }\n\nli {\n  list-style-type: none; }\n\n/* Chrome, Safari, Edge, Opera */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0; }\n\n/* Firefox */\ninput[type=\"number\"] {\n  -moz-appearance: textfield; }\n\n/*\r\n@font-face {\r\n  font-family: 'OfficinaSans';\r\n  src: url('../fonts/OfficinaSansBookC.eot');\r\n  src: url('../fonts/OfficinaSansBookC.eot?#iefix') format('embedded-opentype'),\r\n  url('../fonts/OfficinaSansBookC.woff2') format('woff2'),\r\n  url('../fonts/OfficinaSansBookC.woff') format('woff');\r\n  font-weight: normal;\r\n  font-style: normal;\r\n}\r\n*/\n.loader {\n  transition: all ease-in-out .3s;\n  opacity: 0;\n  z-index: -1000;\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  background: linear-gradient(179.49deg, #FFE686 5.25%, #F7B545 59.89%, #F6A51B 96.87%); }\n  .loader.active {\n    opacity: 1;\n    z-index: 10000; }\n\nbody,\nhtml {\n  position: relative;\n  overflow-x: hidden; }\n\nbody {\n  min-height: 100vh; }\n",".loader {\r\n  @include transition-ease;\r\n  opacity: 0;\r\n  z-index: -1000;\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  @include flex-center();\r\n  background: linear-gradient(179.49deg, #FFE686 5.25%, #F7B545 59.89%, #F6A51B 96.87%);\r\n\r\n  &.active {\r\n    opacity: 1;\r\n    z-index: 10000;\r\n  }\r\n}","@mixin response-to ( $breakpoint ) {\r\n  @if( map-has-key( $breakpoints, $breakpoint ) ) {\r\n    @media( max-width: #{map-get( $breakpoints, $breakpoint ) } ) {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  @else {\r\n    @warn 'Unfortunately, no value could be retrieved from `#{$breakpoint}` . ' +\r\n      'Please make sure it is defined in `$breakpoints` map.';\r\n  }\r\n}\r\n\r\n@mixin font-face($path, $family, $type: null, $extension: null, $style: null) {\r\n  // font-weight values map\r\n  $font-weights: (\r\n          'Thin': 100,\r\n          'Extra-Light': 200,\r\n          'Light': 300,\r\n          'Regular': 400,\r\n          'Medium': 500,\r\n          'Simi-Bold': 600,\r\n          'Bold': 700,\r\n          'Extra-Bold': 800,\r\n          'Black': 900,\r\n          'Extra-Black': 950\r\n  );\r\n\r\n  @font-face {\r\n    font-family: $family;\r\n    font-display: swap;\r\n\r\n    // set font-weight property\r\n    @if $type {\r\n      @each $weight-name, $weight-value in $font-weights {\r\n        @if $type == $weight-name {\r\n          font-weight: $weight-value;\r\n        }\r\n      }\r\n    } @else {\r\n      font-weight: 400;\r\n    }\r\n\r\n    // check font extension and font-type and then set src property\r\n    @if $extension and $type {\r\n      src: url('#{$path}/#{$family}-#{$type}.#{$extension}') format('truetype');\r\n    } @else if $extension or $type {\r\n      @if $type {\r\n        src: url('#{$path}/#{$family}-#{$type}.ttf') format('truetype');\r\n      } @else if $extension {\r\n        src: url('#{$path}/#{$family}.#{$extension}') format('truetype');\r\n      }\r\n    } @else {\r\n      src: url('#{$path}/#{$family}.ttf');\r\n    }\r\n\r\n    // set font-style property\r\n    @if $style {\r\n      font-style: $style;\r\n    } @else {\r\n      font-style: normal;\r\n    }\r\n\r\n  }\r\n}\r\n\r\n@mixin flex( $direction: row, $j-c: flex-start, $a-i: flex-start, $flex-wrap: wrap ) {\r\n  display: flex;\r\n  flex-direction: $direction;\r\n  justify-content: $j-c;\r\n  align-items: $a-i;\r\n  flex-wrap: $flex-wrap;\r\n}\r\n\r\n@mixin flex-center( $direction: row, $flex-wrap: wrap) {\r\n  @include flex( $direction, center, center, $flex-wrap );\r\n}\r\n\r\n@mixin on-event {\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin message-tint( $color, $background-color: null ) {\r\n  color: $color;\r\n\r\n  @if ( type_of( $color ) == 'color' ) {\r\n    background-color: lighten( $color, 30% );\r\n  } @else {\r\n    @warn 'Parameter $color for message mixin should be a color.';\r\n  }\r\n}\r\n\r\n@mixin pos-absolute( $top: null, $right: null, $bottom: null, $left: null ) {\r\n  position: absolute;\r\n  top: $top;\r\n  right: $right;\r\n  bottom: $bottom;\r\n  left: $left;\r\n}\r\n\r\n@mixin transition-ease {\r\n  transition: all ease-in-out .3s;\r\n}\r\n","@import \"abstracts/functions\";\r\n@import \"abstracts/mixins\";\r\n@import \"abstracts/variables\";\r\n\r\n@import \"base/reset\";\r\n@import \"base/typography\";\r\n@import \"base/base\";\r\n\r\n@import \"components/menu\";\r\n@import \"components/loader\";\r\n\r\nbody,\r\nhtml {\r\n  position: relative;\r\n  overflow-x: hidden;\r\n}\r\n\r\nbody {\r\n  //font-family: 'OfficinaSans', sans-serif;\r\n  min-height: 100vh;\r\n}"]}